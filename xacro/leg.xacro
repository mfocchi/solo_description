<?xml version="1.0"?>


<robot xmlns:xacro="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" name="solo">

<!-- Things that are needed only for Gazebo (not the physical robot). These include sensor and controller plugin specifications -->
<xacro:include filename="$(find solo_description)/urdfs/leg.transmission.xacro"/>
<xacro:include filename="$(find solo_description)/urdfs/leg.gazebo.xacro"/>


  <!-- See TODO: add the wiki link here -->
  <!-- These are absoulte distance value, the sign are decided below -->
  <xacro:property name="base_2_HFE_x" value="${190.00 * 0.001}" />
  <xacro:property name="base_2_HFE_y" value="${104.60 * 0.001}" />

  <xacro:property name="HFE_2_KFE_y" value="${37.45 * 0.001}" />
  <xacro:property name="HFE_2_KFE_z" value="${160.00 * 0.001}" />

  <xacro:property name="KFE_2_FOOT_y" value="${8.0 * 0.001}" />
  <xacro:property name="KFE_2_FOOT_z" value="${160.00 * 0.001}" />



  <!-- This macro has for purpose to define a left leg -->
  <xacro:macro name="leg" params="prefix is_front is_right has_side_motion
                                  color_name color opacity load_force_sensors">
    <xacro:if value="${has_side_motion}">
      <joint name="${prefix}_haa_joint" type="revolute">
        <parent link="trunk"/>
        <child link="${prefix}_hip_assembly"/>
        <limit effort="1000" lower="-10" upper="10" velocity="1000"/>
        <!-- joints rotates around the x-axis -->
        <axis xyz="1 0 0"/>
        <!-- placement of the joint -->
        <xacro:if value="${is_front}">
          <xacro:unless value="${is_right}">
            <origin xyz="${base_2_HFE_x} ${base_2_HFE_y} 0" rpy="0 0 0" />
          </xacro:unless>
          <xacro:if value="${is_right}">
            <origin xyz="${base_2_HFE_x} ${-base_2_HFE_y} 0" rpy="0 0 0" />
          </xacro:if>
        </xacro:if>
        <xacro:unless value="${is_front}">
          <xacro:unless value="${is_right}">
            <origin xyz="${-base_2_HFE_x} ${base_2_HFE_y} 0" rpy="0 0 0" />
          </xacro:unless>
          <xacro:if value="${is_right}">
            <origin xyz="${-base_2_HFE_x} ${-base_2_HFE_y} 0" rpy="0 0 0" />
          </xacro:if>
        </xacro:unless>
        <!-- pybullet simulation parameters -->
        <dynamics damping="0.0" friction="0.0"/>
      </joint>
      <link name="${prefix}_hip_assembly">
        <!-- create a dummy hip_assembly link to join the two joints -->
        <inertial>
          <origin xyz="0. 0. 0." rpy="0 0 0" />
          <!-- Adding extra weight for actuator module at hip_assembly. -->
          <mass value="0.150"/>
          <inertia ixx="0.00000001" ixy="0.0"        ixz="0.0"
                                    iyy="0.00000001" iyz="0"
                                                     izz="0.00000001"/>
          </inertial>
      </link>
      <joint name="${prefix}_hfe_joint" type="revolute">
        <parent link="${prefix}_hip_assembly"/>
        <child link="${prefix}_upper_leg"/>
        <limit effort="1000" lower="-10" upper="10" velocity="1000"/>
        <!-- joints rotates around the y-axis -->
        <axis xyz="0 1 0"/>
        <!-- placement of the joint -->
        <origin xyz="0 0 0" rpy="0 0 0" />
        <!-- pybullet simulation parameters -->
        <dynamics damping="0.0" friction="0.0"/>
      </joint>
    </xacro:if>
    <xacro:unless value="${has_side_motion}">
      <!-- Joint between the base and the ${prefix} upper leg -->
      <joint name="${prefix}_hfe_joint" type="revolute">
        <parent link="trunk"/>
        <child link="${prefix}_upper_leg"/>
        <limit effort="1000" lower="-10" upper="10" velocity="1000"/>
        <!-- joints rotates around the y-axis -->
        <axis xyz="0 1 0"/>
        <!-- placement of the joint -->
        <xacro:if value="${is_front}">
          <xacro:unless value="${is_right}">
            <origin xyz="${base_2_HFE_x} ${base_2_HFE_y} 0" rpy="0 0 0" />
          </xacro:unless>
          <xacro:if value="${is_right}">
            <origin xyz="${base_2_HFE_x} ${-base_2_HFE_y} 0" rpy="0 0 0" />
          </xacro:if>
        </xacro:if>
        <xacro:unless value="${is_front}">
          <xacro:unless value="${is_right}">
            <origin xyz="${-base_2_HFE_x} ${base_2_HFE_y} 0" rpy="0 0 0" />
          </xacro:unless>
          <xacro:if value="${is_right}">
            <origin xyz="${-base_2_HFE_x} ${-base_2_HFE_y} 0" rpy="0 0 0" />
          </xacro:if>
        </xacro:unless>
        <!-- pybullet simulation parameters -->
        <dynamics damping="0.0" friction="0.0"/>
      </joint>
    </xacro:unless>

    <!-- UPPER LEG LINK -->
    <link name="${prefix}_upper_leg">
      <!-- UPPER LEG LINK INERTIAL -->
      <xacro:unless value="${is_right}">
        <!-- Left upper leg inertia -->
        <inertial>
        <origin xyz="0.00001377 0.01935853 -0.07870700" rpy="0 0 0" />
        <mass value="0.14853845"/>
        <inertia ixx="0.00041107" ixy="0.0"         ixz="0.0"
                                   iyy="0.00041193" iyz="0.00004671"
                                                    izz="0.00003024"/>
        </inertial>
      </xacro:unless>
      <xacro:if value="${is_right}">
        <!-- Right upper leg inertia -->
        <inertial>
        <origin xyz="-0.00001377 -0.01935853 -0.07870700" rpy="0 0 0" />
        <mass value="0.14853845"/>
        <inertia ixx="0.00041107" ixy="0.0"         ixz="0.0"
                                   iyy="0.00041193" iyz="-0.00004671"
                                                    izz="0.00003024"/>
        </inertial>
      </xacro:if>
      <!-- UPPER LEG LINK VISUAL -->
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <xacro:unless value="${is_right}">
            <mesh filename="package://solo_description/meshes/stl/with_foot/solo_upper_leg_left_side.stl"/>
          </xacro:unless>
          <xacro:if value="${is_right}">
            <mesh filename="package://solo_description/meshes/stl/with_foot/solo_upper_leg_right_side.stl"/>
          </xacro:if>
        </geometry>
        <material name="${color_name}">
            <color rgba="${color} ${opacity}"/>
        </material>
      </visual>
      <!-- UPPER LEG LINK COLLISION -->
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <xacro:unless value="${is_right}">
            <mesh filename="package://solo_description/meshes/stl/with_foot/solo_upper_leg_left_side.stl"/>
          </xacro:unless>
          <xacro:if value="${is_right}">
            <mesh filename="package://solo_description/meshes/stl/with_foot/solo_upper_leg_right_side.stl"/>
          </xacro:if>
        </geometry>
        <material name="${color_name}">
            <color rgba="${color} ${opacity}"/>
        </material>
      </collision>
      <!-- Bullet specific paramters -->
      <contact>
        <lateral_friction value="1.0"/>
        <restitution value="0.5"/>
      </contact>
    </link> <!-- END UPPER LEG LINK -->




    <!-- KFE JOINT -->
    <joint name="${prefix}_kfe_joint" type="revolute">
      <parent link="${prefix}_upper_leg"/>
      <child link="${prefix}_lower_leg"/>
      <limit effort="1000" lower="-10" upper="10" velocity="1000"/>
      <!-- joints rotates around the y-axis -->
      <axis xyz="0 1 0"/>
      <!-- placement of the joint -->
      <xacro:if value="${is_front}">
        <xacro:unless value="${is_right}">
          <origin xyz="0 ${HFE_2_KFE_y} ${-HFE_2_KFE_z}" rpy="0 0 0" />
        </xacro:unless>
        <xacro:if value="${is_right}">
          <origin xyz="0 ${-HFE_2_KFE_y} ${-HFE_2_KFE_z}" rpy="0 0 0" />
        </xacro:if>
      </xacro:if>
      <xacro:unless value="${is_front}">
        <xacro:unless value="${is_right}">
          <origin xyz="0 ${HFE_2_KFE_y} ${-HFE_2_KFE_z}" rpy="0 0 0" />
        </xacro:unless>
        <xacro:if value="${is_right}">
          <origin xyz="0 ${-HFE_2_KFE_y} ${-HFE_2_KFE_z}" rpy="0 0 0" />
        </xacro:if>
      </xacro:unless>
      <!-- pybullet simulation parameters -->
      <dynamics damping="0.0" friction="0.0"/>
    </joint>



    <!-- LOWERLEG -->
    <link name="${prefix}_lower_leg">
      <!-- LOWER LEG LINK INERTIAL -->
      <xacro:unless value="${is_right}">
        <!-- Left lower leg inertia -->
        <inertial>
        <origin xyz="0.0 0.00787644 -0.08928215" rpy="0 0 0" />
        <mass value="0.03070001"/>
        <inertia ixx="0.00012024" ixy="0.0"         ixz="0.0"
                                   iyy="0.00012029" iyz="0.00000305"
                                                    izz="0.00000216"/>
        </inertial>
      </xacro:unless>
      <xacro:if value="${is_right}">
        <!-- Right lower leg inertia -->
        <inertial>
        <origin xyz="0.0 0.00787644 -0.08928215" rpy="0 0 0" />
        <mass value="0.03070001"/>
        <inertia ixx="0.00012024" ixy="0.0"         ixz="0.0"
                                   iyy="0.00012029" iyz="-0.00000305"
                                                    izz="0.00000216"/>
        </inertial>
      </xacro:if>
      <!-- LOWER LEG LINK VISUAL -->
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <xacro:unless value="${is_right}">
            <mesh filename="package://solo_description/meshes/stl/with_foot/solo_lower_leg_left_side.stl"/>
          </xacro:unless>
          <xacro:if value="${is_right}">
            <mesh filename="package://solo_description/meshes/stl/with_foot/solo_lower_leg_right_side.stl"/>
          </xacro:if>
        </geometry>
        <material name="${color_name}">
            <color rgba="${color} ${opacity}"/>
        </material>
      </visual>
      <!-- LOWER LEG LINK COLLISION -->
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <xacro:unless value="${is_right}">
            <mesh filename="package://solo_description/meshes/stl/with_foot/solo_lower_leg_left_side.stl"/>
          </xacro:unless>
          <xacro:if value="${is_right}">
            <mesh filename="package://solo_description/meshes/stl/with_foot/solo_lower_leg_right_side.stl"/>
          </xacro:if>
        </geometry>
        <material name="${color_name}">
            <color rgba="${color} ${opacity}"/>
        </material>
      </collision>
      <!-- Bullet specific paramters -->
      <contact>
        <lateral_friction value="1.0"/>
        <restitution value="0.5"/>
      </contact>
    </link> <!-- END LOWER LEG LINK -->


<!-- KFE: Joint between the upper leg and the lower leg -->
<joint name="${prefix}_ankle" type="fixed">
  <parent link="${prefix}_lower_leg"/>
  <child link="${prefix}_foot"/>
  <!-- Joint placement -->
  <origin xyz="0 0 ${-HFE_2_KFE_z}" rpy="0 0 0" />
  <!-- Limits (usefull?) -->
  <limit effort="1000" lower="-10" upper="10" velocity="1000"/>
  <!-- pybullet simulation parameters -->
  <dynamics damping="0.0" friction="0.0"/>
</joint>


      <!-- FOOT -->
    <link name="${prefix}_foot">
      <!-- FOOT INERTIAL -->
      <!-- This link is symmetrical left or right -->
      <inertial>
        <origin xyz="0 0 0.00035767" rpy="0 0 0" />
        <mass value="0.00693606"/>
        <inertia ixx="0.00000057" ixy="0.0"         ixz="0.0"
                                   iyy="0.00000084" iyz="0.0"
                                                    izz="0.00000053"/>
     </inertial>
      <!-- FOOT VISUAL -->
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://solo_description/meshes/stl/with_foot/solo_foot.stl"/>
        </geometry>
        <material name="${color_name}">
            <color rgba="${color} ${opacity}"/>
        </material>
      </visual>
      <!-- FOOT COLLISION -->
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <mesh filename="package://solo_description/meshes/stl/with_foot/solo_foot.stl"/>
        </geometry>
        <material name="${color_name}">
            <color rgba="${color} ${opacity}"/>
        </material>
      </collision>
      <!-- Bullet specific paramters -->
      <contact>
        <lateral_friction value="1.0"/>
        <restitution value="0.5"/>
      </contact>
    </link> <!-- END LOWER LEG LINK -->

        <!-- Extensions -->
        <xacro:leg_transmission name="${prefix}"/>
        <xacro:leg_gazebo name="${prefix}" load_force_sensors="${load_force_sensors}"/>
  </xacro:macro>
</robot>
