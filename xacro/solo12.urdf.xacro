<?xml version="1.0" ?>
<robot name="solo"
  xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
  xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
  xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
  xmlns:xacro="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface">

  <xacro:arg name="load_force_sensors" default="false"/>

  <xacro:property name="color_name" value="grey" />
  <xacro:property name="color" value="0.8 0.8 0.8" />
  <xacro:property name="opacity" value="1.0" />

    <!-- Floating-base Joint -->
    <link name="world"/>
    <joint name="floating_base_joint" type="floating">
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <parent link="world"/>
        <child link="base_link"/>
        </joint>
        <joint name="floating_base" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <parent link="base_link"/>
        <child link="trunk"/>
    </joint>
    <link name="trunk"/>

    <!-- Fixed joint to add dummy inertia link -->
    <joint name="base_to_base_inertia" type="fixed">
        <parent link="trunk"/>
        <child link="base_inertia"/>
        <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>
    <!-- Dummy inertia link, because KDL cannot have inertia on the base link -->
    <link name="base_inertia">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="1.63315091"/>
            <!-- The base is extremely symmetrical. -->
            <inertia ixx="0.00578574" ixy="0.0" ixz="0.0"
                                      iyy="0.01938108" iyz="0.0"
                                                       izz="0.02476124"/>
        </inertial>
    </link>

  <!-- This file is based on: https://atlas.is.localnet/confluence/display/AMDW/Quadruped+URDF+Files -->
  <link name="base_link">
                <!-- BASE LINK VISUAL -->
                <visual>
                    <origin xyz="0 0 0" rpy="0 0 0" />
                    <geometry>
                      <mesh filename="package://solo_description/meshes/stl/with_foot/solo_body.stl"/>
                    </geometry>
                    <material name="${color_name}">
                        <color rgba="${color} ${opacity}"/>
                    </material>
                </visual>
                <!-- BASE LINK COLLISION -->
                <collision>
                    <origin xyz="0 0 0" rpy="0 0 0" />
                    <geometry>
                      <mesh filename="package://solo_description/meshes/stl/with_foot/solo_body.stl"/>
                    </geometry>
                    <material name="${color_name}">
                        <color rgba="${color} ${opacity}"/>
                    </material>
                </collision>
                <!-- Bullet specific paramters -->
                <contact>
                  <lateral_friction value="1.0"/>
                  <restitution value="0.5"/>
                </contact>
  </link> <!-- END BASE LINK -->



  <!-- Include the legs -->
  <xacro:include filename="leg.xacro"/>

  <!-- Include the front left leg -->
  <xacro:leg
      prefix="FL"
      is_front="true"
      is_right="false"
      has_side_motion="true"
      color_name="${color_name}"
      color="${color}"
      opacity="${opacity}"
      load_force_sensors="$(arg load_force_sensors)"/>

  <!-- Include the front right leg -->
  <xacro:leg
      prefix="FR"
      is_front="true"
      is_right="true"
      has_side_motion="true"
      color_name="${color_name}"
      color="${color}"
      opacity="${opacity}"
      load_force_sensors="$(arg load_force_sensors)"/>

  <!-- Include the hind left leg -->
  <xacro:leg
      prefix="HL"
      is_front="false"
      is_right="false"
      has_side_motion="true"
      color_name="${color_name}"
      color="${color}"
      opacity="${opacity}"
      load_force_sensors="$(arg load_force_sensors)"/>

  <!-- Include the hind right leg -->
  <xacro:leg
      prefix="HR"
      is_front="false"
      is_right="true"
      has_side_motion="true"
      color_name="${color_name}"
      color="${color}"
      opacity="${opacity}"
      load_force_sensors="$(arg load_force_sensors)"/>
</robot>
